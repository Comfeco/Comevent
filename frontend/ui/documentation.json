{
    "pipes": [],
    "interfaces": [],
    "injectables": [],
    "guards": [],
    "interceptors": [],
    "classes": [],
    "directives": [],
    "components": [
        {
            "name": "ButtonComponent",
            "id": "component-ButtonComponent-25c5571d235a861345f4e4c2a866c28f3619cee54bc5fc491e63203e81680d0eec2d442c4c5db45e8d5dceaba3e607199c4f92034471839f8887ceff630c03b5",
            "file": "frontend/ui/components/molecules/button/button.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [
                "ViewEncapsulation.Emulated"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "c-button",
            "styleUrls": [
                "./button.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./button.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "css",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "",
                    "decorators": []
                },
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "",
                    "decorators": []
                },
                {
                    "name": "type",
                    "defaultValue": "'button'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  Input,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { ButtonType } from './button.interface';\n\n@Component({\n  standalone: true,\n  selector: 'c-button',\n  imports: [CommonModule],\n  templateUrl: './button.component.html',\n  styleUrls: ['./button.component.scss'],\n  encapsulation: ViewEncapsulation.Emulated,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ButtonComponent implements ButtonType {\n  @Input() type: ButtonType['type'] = 'button';\n  @Input() disabled: ButtonType['disabled'] = false;\n  @Input() css!: ButtonType['css'];\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./button.component.scss"
                }
            ],
            "stylesData": "",
            "implements": [
                "ButtonType"
            ],
            "templateData": "<button\n  [ngClass]=\"{\n    button: true,\n    'button-primary': css === 'button-primary' && !disabled,\n    'button-secondary': css === 'button-secondary',\n    'button-tertiary': css === 'button-tertiary',\n    'transition-all h-9': disabled\n  }\"\n  [type]=\"type\"\n  [class]=\"css\"\n  [disabled]=\"disabled\"\n>\n  <ng-content></ng-content>\n</button>\n"
        },
        {
            "name": "ErrorInputComponent",
            "id": "component-ErrorInputComponent-315e29372e122a690481f1fb9bd58f0829c8a68d25cc3c3d8adc3a2dbffb6ca6dfef5a1a0600e492435a55abf2df36562ccab811af482bd0474477d9361f8966",
            "file": "frontend/ui/components/atoms/error-input/error-input.component.ts",
            "encapsulation": [
                "ViewEncapsulation.Emulated"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "c-error-input",
            "styleUrls": [
                "./error-input.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./error-input.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "controlName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "formContained",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "AbstractControl",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "getErrorMessage",
                    "args": [
                        {
                            "name": "errors",
                            "type": "Record<string | any>",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 33,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "errors",
                            "type": "Record<string | any>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { Component, Input, ViewEncapsulation } from '@angular/core';\nimport { AbstractControl, FormGroup } from '@angular/forms';\nimport { DefaultErrorMessages } from './error-input.interface';\n@Component({\n  standalone: true,\n  selector: 'c-error-input',\n  imports: [CommonModule],\n  templateUrl: './error-input.component.html',\n  styleUrls: ['./error-input.component.scss'],\n  encapsulation: ViewEncapsulation.Emulated,\n})\nexport class ErrorInputComponent {\n  @Input() public controlName?: string;\n  @Input() public formContained!: AbstractControl;\n\n  private get currentControl(): AbstractControl | null {\n    if (this.formContained && this.controlName) {\n      return this.formContained instanceof FormGroup\n        ? this.formContained.get(this.controlName)\n        : this.formContained;\n    }\n    return null;\n  }\n\n  protected get error(): string {\n    const errorMessage = this.currentControl?.errors\n      ? this.getErrorMessage(this.currentControl?.errors)\n      : '';\n    return errorMessage;\n  }\n\n  private getErrorMessage(errors: Record<string, any>): string {\n    const [errorName] = Object.keys(errors);\n    const errorFunction = DefaultErrorMessages[errorName];\n    if (errorFunction) {\n      return errorFunction(errors[errorName]);\n    } else {\n      return 'An error occurred';\n    }\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".error {\n  @apply w-full rounded-md h-auto p-1 bg-red-200 gap-2 items-center flex text-red-500 flex-wrap justify-center font-semibold;\n}\n\n.size-icon {\n  @apply h-4 w-4;\n}\n",
                    "styleUrl": "./error-input.component.scss"
                }
            ],
            "stylesData": "",
            "accessors": {
                "currentControl": {
                    "name": "currentControl",
                    "getSignature": {
                        "name": "currentControl",
                        "type": "",
                        "returnType": "AbstractControl | null",
                        "line": 17
                    }
                },
                "error": {
                    "name": "error",
                    "getSignature": {
                        "name": "error",
                        "type": "string",
                        "returnType": "string",
                        "line": 26
                    }
                }
            },
            "templateData": "<span>\n  <div class=\"error\">\n    <img class=\"size-icon\" src=\"/assets/ui/icon-error.svg\" alt=\"icon error\" />\n    <span class=\"text-center\">{{ error }}</span>\n  </div>\n</span>\n"
        },
        {
            "name": "IconAreaComponent",
            "id": "component-IconAreaComponent-1bb4289ee6f37d62351819a2a7e11e20d51c4dcfb34f2d8b45612c29de6bb92d3f546e3df29c02708890d96635909394fd4a962817dcc5a778e72ceceb9ecc95",
            "file": "frontend/ui/components/atoms/icons/icon-area/icon-area.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [
                "ViewEncapsulation.Emulated"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "icon-area",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./icon-area.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "status",
                    "defaultValue": "'Pending'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  Input,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { IconType } from '../icon.interface';\n\n@Component({\n  standalone: true,\n  selector: 'icon-area',\n  imports: [CommonModule],\n  templateUrl: './icon-area.component.html',\n  encapsulation: ViewEncapsulation.Emulated,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class IconAreaComponent implements IconType {\n  @Input() status: IconType['status'] = 'Pending';\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "implements": [
                "IconType"
            ],
            "templateData": "<svg\n  width=\"24\"\n  height=\"24\"\n  viewBox=\"0 0 24 24\"\n  fill=\"none\"\n  xmlns=\"http://www.w3.org/2000/svg\"\n>\n  <g clip-path=\"url(#clip0_21_398)\">\n    <path\n      [ngClass]=\"{\n        'stroke-primary': status === 'In Progress',\n        'stroke-gray-2': status === 'Pending'\n      }\"\n      d=\"M4 18V13L8 11L12 13V18L8 20L4 18Z\"\n      stroke-width=\"2\"\n      stroke-linecap=\"round\"\n      stroke-linejoin=\"round\"\n    />\n    <path\n      [ngClass]=\"{\n        'stroke-primary': status === 'In Progress',\n        'stroke-gray-2': status === 'Pending'\n      }\"\n      d=\"M8 11V6L12 4L16 6V11\"\n      stroke-width=\"2\"\n      stroke-linecap=\"round\"\n      stroke-linejoin=\"round\"\n    />\n    <path\n      [ngClass]=\"{\n        'stroke-primary': status === 'In Progress',\n        'stroke-gray-2': status === 'Pending'\n      }\"\n      d=\"M12.5 13L16.5 11L20.5 13V18L16.5 20L12.5 18\"\n      stroke-width=\"2\"\n      stroke-linecap=\"round\"\n      stroke-linejoin=\"round\"\n    />\n  </g>\n  <defs>\n    <clipPath id=\"clip0_21_398\">\n      <rect width=\"24\" height=\"24\" fill=\"white\" />\n    </clipPath>\n  </defs>\n</svg>\n"
        },
        {
            "name": "IconBasicComponent",
            "id": "component-IconBasicComponent-9b655b12e5c32a3db5a8b3a6526473c5edae34a5b01ae8cfea6736e10f7842ca138932eac9d10883a2074f9b8eb2cff979d61b5ac394e90e24ea37170d106145",
            "file": "frontend/ui/components/atoms/icons/icon-basic/icon-basic.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [
                "ViewEncapsulation.Emulated"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "icon-basic",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./icon-basic.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "status",
                    "defaultValue": "'Pending'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  Input,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { IconType } from '../icon.interface';\n\n@Component({\n  standalone: true,\n  selector: 'icon-basic',\n  imports: [CommonModule],\n  templateUrl: './icon-basic.component.html',\n  encapsulation: ViewEncapsulation.Emulated,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class IconBasicComponent implements IconType {\n  @Input() status: IconType['status'] = 'Pending';\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "implements": [
                "IconType"
            ],
            "templateData": "<svg\n  width=\"25\"\n  height=\"24\"\n  viewBox=\"0 0 25 24\"\n  fill=\"none\"\n  xmlns=\"http://www.w3.org/2000/svg\"\n>\n  <path\n    [ngClass]=\"{\n      'stroke-primary': status === 'In Progress',\n      'stroke-gray-2': status === 'Pending'\n    }\"\n    d=\"M8.5 5H6.5C5.96957 5 5.46086 5.21071 5.08579 5.58579C4.71071 5.96086 4.5 6.46957 4.5 7V19C4.5 19.5304 4.71071 20.0391 5.08579 20.4142C5.46086 20.7893 5.96957 21 6.5 21H12.197\"\n    stroke-width=\"2\"\n    stroke-linecap=\"round\"\n    stroke-linejoin=\"round\"\n  />\n  <path\n    [ngClass]=\"{\n      'stroke-primary': status === 'In Progress',\n      'stroke-gray-2': status === 'Pending'\n    }\"\n    d=\"M18.5 12V7C18.5 6.46957 18.2893 5.96086 17.9142 5.58579C17.5391 5.21071 17.0304 5 16.5 5H14.5\"\n    stroke-width=\"2\"\n    stroke-linecap=\"round\"\n    stroke-linejoin=\"round\"\n  />\n  <path\n    [ngClass]=\"{\n      'stroke-primary': status === 'In Progress',\n      'stroke-gray-2': status === 'Pending'\n    }\"\n    d=\"M8.5 5C8.5 4.46957 8.71071 3.96086 9.08579 3.58579C9.46086 3.21071 9.96957 3 10.5 3H12.5C13.0304 3 13.5391 3.21071 13.9142 3.58579C14.2893 3.96086 14.5 4.46957 14.5 5C14.5 5.53043 14.2893 6.03914 13.9142 6.41421C13.5391 6.78929 13.0304 7 12.5 7H10.5C9.96957 7 9.46086 6.78929 9.08579 6.41421C8.71071 6.03914 8.5 5.53043 8.5 5Z\"\n    stroke-width=\"2\"\n    stroke-linecap=\"round\"\n    stroke-linejoin=\"round\"\n  />\n  <path\n    [ngClass]=\"{\n      'stroke-primary': status === 'In Progress',\n      'stroke-gray-2': status === 'Pending'\n    }\"\n    d=\"M8.5 11H12.5\"\n    stroke-width=\"2\"\n    stroke-linecap=\"round\"\n    stroke-linejoin=\"round\"\n  />\n  <path\n    [ngClass]=\"{\n      'stroke-primary': status === 'In Progress',\n      'stroke-gray-2': status === 'Pending'\n    }\"\n    d=\"M8.5 15H11.5\"\n    stroke-width=\"2\"\n    stroke-linecap=\"round\"\n    stroke-linejoin=\"round\"\n  />\n  <path\n    [ngClass]=\"{\n      'stroke-primary': status === 'In Progress',\n      'stroke-gray-2': status === 'Pending'\n    }\"\n    d=\"M14.5 17.5C14.5 18.163 14.7634 18.7989 15.2322 19.2678C15.7011 19.7366 16.337 20 17 20C17.663 20 18.2989 19.7366 18.7678 19.2678C19.2366 18.7989 19.5 18.163 19.5 17.5C19.5 16.837 19.2366 16.2011 18.7678 15.7322C18.2989 15.2634 17.663 15 17 15C16.337 15 15.7011 15.2634 15.2322 15.7322C14.7634 16.2011 14.5 16.837 14.5 17.5Z\"\n    stroke-width=\"2\"\n    stroke-linecap=\"round\"\n    stroke-linejoin=\"round\"\n  />\n  <path\n    [ngClass]=\"{\n      'stroke-primary': status === 'In Progress',\n      'stroke-gray-2': status === 'Pending'\n    }\"\n    d=\"M19 19.5L21.5 22\"\n    stroke-width=\"2\"\n    stroke-linecap=\"round\"\n    stroke-linejoin=\"round\"\n  />\n</svg>\n"
        },
        {
            "name": "IconPassComponent",
            "id": "component-IconPassComponent-067d0c878e303aeb71efda8d4d0424e6242aa64e36e02a694958404ff17bf10273f1161bd495ae86d86419e01439dccd0b312b659b4a6d99f088600128df6217",
            "file": "frontend/ui/components/atoms/icons/icon-pass/icon-pass.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [
                "ViewEncapsulation.Emulated"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "icon-pass",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./icon-pass.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "status",
                    "defaultValue": "'Pending'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  Input,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { IconType } from '../icon.interface';\n\n@Component({\n  standalone: true,\n  selector: 'icon-pass',\n  imports: [CommonModule],\n  templateUrl: './icon-pass.component.html',\n  encapsulation: ViewEncapsulation.Emulated,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class IconPassComponent implements IconType {\n  @Input() status: IconType['status'] = 'Pending';\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "implements": [
                "IconType"
            ],
            "templateData": "<svg\n  width=\"24\"\n  height=\"24\"\n  viewBox=\"0 0 24 24\"\n  fill=\"none\"\n  xmlns=\"http://www.w3.org/2000/svg\"\n>\n  <g clip-path=\"url(#clip0_21_327)\">\n    <path\n      [ngClass]=\"{\n        'stroke-primary': status === 'In Progress',\n        'stroke-gray-2': status === 'Pending'\n      }\"\n      d=\"M12 17V21\"\n      stroke-width=\"2\"\n      stroke-linecap=\"round\"\n      stroke-linejoin=\"round\"\n    />\n    <path\n      [ngClass]=\"{\n        'stroke-primary': status === 'In Progress',\n        'stroke-gray-2': status === 'Pending'\n      }\"\n      d=\"M10 20L14 18\"\n      stroke-width=\"2\"\n      stroke-linecap=\"round\"\n      stroke-linejoin=\"round\"\n    />\n    <path\n      [ngClass]=\"{\n        'stroke-primary': status === 'In Progress',\n        'stroke-gray-2': status === 'Pending'\n      }\"\n      d=\"M10 18L14 20\"\n      stroke-width=\"2\"\n      stroke-linecap=\"round\"\n      stroke-linejoin=\"round\"\n    />\n    <path\n      [ngClass]=\"{\n        'stroke-primary': status === 'In Progress',\n        'stroke-gray-2': status === 'Pending'\n      }\"\n      d=\"M5 17V21\"\n      stroke-width=\"2\"\n      stroke-linecap=\"round\"\n      stroke-linejoin=\"round\"\n    />\n    <path\n      [ngClass]=\"{\n        'stroke-primary': status === 'In Progress',\n        'stroke-gray-2': status === 'Pending'\n      }\"\n      d=\"M3 20L7 18\"\n      stroke-width=\"2\"\n      stroke-linecap=\"round\"\n      stroke-linejoin=\"round\"\n    />\n    <path\n      [ngClass]=\"{\n        'stroke-primary': status === 'In Progress',\n        'stroke-gray-2': status === 'Pending'\n      }\"\n      d=\"M3 18L7 20\"\n      stroke-width=\"2\"\n      stroke-linecap=\"round\"\n      stroke-linejoin=\"round\"\n    />\n    <path\n      [ngClass]=\"{\n        'stroke-primary': status === 'In Progress',\n        'stroke-gray-2': status === 'Pending'\n      }\"\n      d=\"M19 17V21\"\n      stroke-width=\"2\"\n      stroke-linecap=\"round\"\n      stroke-linejoin=\"round\"\n    />\n    <path\n      [ngClass]=\"{\n        'stroke-primary': status === 'In Progress',\n        'stroke-gray-2': status === 'Pending'\n      }\"\n      d=\"M17 20L21 18\"\n      stroke-width=\"2\"\n      stroke-linecap=\"round\"\n      stroke-linejoin=\"round\"\n    />\n    <path\n      [ngClass]=\"{\n        'stroke-primary': status === 'In Progress',\n        'stroke-gray-2': status === 'Pending'\n      }\"\n      d=\"M17 18L21 20\"\n      stroke-width=\"2\"\n      stroke-linecap=\"round\"\n      stroke-linejoin=\"round\"\n    />\n    <path\n      [ngClass]=\"{\n        'stroke-primary': status === 'In Progress',\n        'stroke-gray-2': status === 'Pending'\n      }\"\n      d=\"M9 6C9 6.79565 9.31607 7.55871 9.87868 8.12132C10.4413 8.68393 11.2044 9 12 9C12.7956 9 13.5587 8.68393 14.1213 8.12132C14.6839 7.55871 15 6.79565 15 6C15 5.20435 14.6839 4.44129 14.1213 3.87868C13.5587 3.31607 12.7956 3 12 3C11.2044 3 10.4413 3.31607 9.87868 3.87868C9.31607 4.44129 9 5.20435 9 6Z\"\n      stroke-width=\"2\"\n      stroke-linecap=\"round\"\n      stroke-linejoin=\"round\"\n    />\n    <path\n      [ngClass]=\"{\n        'stroke-primary': status === 'In Progress',\n        'stroke-gray-2': status === 'Pending'\n      }\"\n      d=\"M7 14C7 13.4696 7.21071 12.9609 7.58579 12.5858C7.96086 12.2107 8.46957 12 9 12H15C15.5304 12 16.0391 12.2107 16.4142 12.5858C16.7893 12.9609 17 13.4696 17 14\"\n      stroke-width=\"2\"\n      stroke-linecap=\"round\"\n      stroke-linejoin=\"round\"\n    />\n  </g>\n  <defs>\n    <clipPath id=\"clip0_21_327\">\n      <rect width=\"24\" height=\"24\" fill=\"white\" />\n    </clipPath>\n  </defs>\n</svg>\n"
        },
        {
            "name": "InputComponent",
            "id": "component-InputComponent-a0342a5d55ed1377359874d2f8c4658d213b41cf7060f0b01342e0200e92c618eed66aa254059b883d2d24ffa68db927d85a1e2d69c5473a2f9e26c0a6cc262f",
            "file": "frontend/ui/components/molecules/input/input.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [
                "ViewEncapsulation.Emulated"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "{\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => InputComponent), multi: true,\n}",
                    "type": "component"
                }
            ],
            "selector": "c-input",
            "styleUrls": [
                "./input.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./input.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "css",
                    "defaultValue": "'input-primary'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 44,
                    "type": "",
                    "decorators": []
                },
                {
                    "name": "customErrorMessages",
                    "defaultValue": "{}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 47,
                    "type": "Record<string | string>",
                    "decorators": []
                },
                {
                    "name": "disabled",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 50,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "id",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 43,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 48,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "placeholder",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 45,
                    "type": "string | undefined",
                    "decorators": []
                },
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 46,
                    "type": "string | number | undefined",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "FormsModule",
                    "type": "module"
                },
                {
                    "name": "ReactiveFormsModule",
                    "type": "module"
                },
                {
                    "name": "ErrorInputComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  Input,\n  ViewEncapsulation,\n  forwardRef,\n} from '@angular/core';\nimport {\n  FormsModule,\n  NG_VALUE_ACCESSOR,\n  ReactiveFormsModule,\n} from '@angular/forms';\nimport { ErrorInputComponent } from '../../atoms/error-input/error-input.component';\nimport { ControlValueAccesorDirective } from '../../shared/directives/control-value-accesor.directive';\nimport { InputType } from './input.interface';\n\n@Component({\n  standalone: true,\n  selector: 'c-input',\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    ErrorInputComponent,\n  ],\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => InputComponent),\n      multi: true,\n    },\n  ],\n  templateUrl: './input.component.html',\n  styleUrls: ['./input.component.scss'],\n  encapsulation: ViewEncapsulation.Emulated,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class InputComponent<T>\n  extends ControlValueAccesorDirective<T>\n  implements InputType\n{\n  @Input() id = '';\n  @Input() css: InputType['css'] = 'input-primary';\n  @Input() placeholder?: string | undefined;\n  @Input() value?: string | number | undefined;\n  @Input() customErrorMessages: Record<string, string> = {};\n  @Input() name!: string;\n  @Input()\n  set disabled(value: boolean) {\n    this.setDisabledState(value);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".content-input {\n  @apply flex flex-col gap-1;\n}\n\n.input {\n  @apply outline-none rounded w-auto px-4;\n}\n\n.error {\n  @apply border-red-500 text-red-400;\n}\n\n.input-primary {\n  @apply focus:placeholder-transparent placeholder-gray-200 h-10 w-full border-b-2 text-gray-600 focus:outline-none focus:border-purple-400 transition-all placeholder:font-semibold;\n}\n",
                    "styleUrl": "./input.component.scss"
                }
            ],
            "stylesData": "",
            "extends": "ControlValueAccesorDirective",
            "implements": [
                "InputType"
            ],
            "accessors": {
                "disabled": {
                    "name": "disabled",
                    "setSignature": {
                        "name": "disabled",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "value",
                                "type": "boolean",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 50,
                        "jsdoctags": [
                            {
                                "name": "value",
                                "type": "boolean",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    }
                }
            },
            "templateData": "<div *ngIf=\"control\" class=\"content-input\">\n  <input\n    [ngClass]=\"{ input: true, 'input-primary': css === 'input-primary' }\"\n    [placeholder]=\"placeholder\"\n    [type]=\"type\"\n    [attr.value]=\"value || null\"\n    [attr.id]=\"id || null\"\n    [formControl]=\"control\"\n  />\n  <c-error-input\n    *ngIf=\"!isValid()\"\n    [formContained]=\"control\"\n    [controlName]=\"name\"\n  ></c-error-input>\n</div>\n"
        },
        {
            "name": "LabelComponent",
            "id": "component-LabelComponent-e8ab10543c78185bb66e9d3e9b6a087649d07a6d981e11f07acb06a7668a0faed9870391eb32c0cb74627005d2b53bab264e1443f38a84e2f363d79feeea5ad3",
            "file": "frontend/ui/components/atoms/label/label.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [
                "ViewEncapsulation.Emulated"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "c-label",
            "styleUrls": [
                "./label.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./label.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "css",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "\"label-primary\" | \"label-secondary\" | \"label-tertiary\"",
                    "decorators": []
                },
                {
                    "name": "for",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  Input,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { LabelType } from './label.interface';\n\n@Component({\n  standalone: true,\n  selector: 'c-label',\n  imports: [CommonModule],\n  templateUrl: './label.component.html',\n  styleUrls: ['./label.component.scss'],\n  encapsulation: ViewEncapsulation.Emulated,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class LabelComponent implements LabelType {\n  @Input() css!: 'label-primary' | 'label-secondary' | 'label-tertiary';\n  @Input() for?: string;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./label.component.scss"
                }
            ],
            "stylesData": "",
            "implements": [
                "LabelType"
            ],
            "templateData": "<label\n  [ngClass]=\"{\n    label: true,\n    'label-primary': css === 'label-primary'\n  }\"\n>\n  <ng-content></ng-content>\n</label>\n"
        },
        {
            "name": "StepComponent",
            "id": "component-StepComponent-5c21caae911bedfb679c95d0610170288008dd678a3397cf6b7e21758014d8b26cf1e1b756211556229c7bb336f7a288295eb3bb07183ee8dde89da399f5dd99",
            "file": "frontend/ui/components/molecules/step/step.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [
                "ViewEncapsulation.Emulated"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "c-step",
            "styleUrls": [
                "./step.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./step.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "logo",
                    "defaultValue": "'area'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 31,
                    "type": "",
                    "decorators": []
                },
                {
                    "name": "status",
                    "defaultValue": "'Pending'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 30,
                    "type": "",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "IconAreaComponent",
                    "type": "component"
                },
                {
                    "name": "IconPassComponent",
                    "type": "component"
                },
                {
                    "name": "IconBasicComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  Input,\n  ViewEncapsulation,\n} from '@angular/core';\nimport {\n  IconAreaComponent,\n  IconBasicComponent,\n  IconPassComponent,\n} from '../../atoms/icons';\nimport { StepType } from './step.interface';\n\n@Component({\n  standalone: true,\n  selector: 'c-step',\n  imports: [\n    CommonModule,\n    IconAreaComponent,\n    IconPassComponent,\n    IconBasicComponent,\n  ],\n  templateUrl: './step.component.html',\n  styleUrls: ['./step.component.scss'],\n  encapsulation: ViewEncapsulation.Emulated,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class StepComponent implements StepType {\n  @Input() status: StepType['status'] = 'Pending';\n  @Input() logo: StepType['logo'] = 'area';\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".content-global-step {\n  @apply flex flex-col gap-2 items-center;\n}\n\n.content-step {\n  @apply flex justify-center items-center h-[46px] w-[46px] rounded-full;\n}\n\n.content-inner-step {\n  @apply flex justify-center items-center h-[38px] w-[38px] bg-white-1 rounded-full border-transparent border-2;\n}\n",
                    "styleUrl": "./step.component.scss"
                }
            ],
            "stylesData": "",
            "implements": [
                "StepType"
            ],
            "templateData": "<div class=\"content-global-step\">\n  <div\n    [ngClass]=\"{\n      'bg-primary': status === 'In Progress',\n      'bg-gray-2': status === 'Pending',\n      'bg-success': status === 'Completed',\n      'content-step': true\n    }\"\n  >\n    <div class=\"content-inner-step\">\n      <ng-container [ngSwitch]=\"logo\">\n        <div *ngSwitchCase=\"'basic'\">\n          <icon-basic [status]=\"status\" />\n        </div>\n        <div *ngSwitchCase=\"'pass'\">\n          <icon-pass [status]=\"status\" />\n        </div>\n        <div *ngSwitchCase=\"'area'\">\n          <icon-area [status]=\"status\" />\n        </div>\n        <div *ngSwitchCase=\"'check'\">\n          <svg\n            width=\"19\"\n            height=\"14\"\n            viewBox=\"0 0 19 14\"\n            fill=\"none\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n          >\n            <path\n              [ngClass]=\"{\n                'stroke-success': status === 'Completed'\n              }\"\n              d=\"M2 7L7 12L17 2\"\n              stroke-width=\"4\"\n              stroke-linecap=\"round\"\n              stroke-linejoin=\"round\"\n            />\n          </svg>\n        </div>\n      </ng-container>\n    </div>\n  </div>\n  <p *ngIf=\"logo === 'basic'\" class=\"body-small\">Basic data</p>\n  <p *ngIf=\"logo === 'pass'\" class=\"body-small\">Password</p>\n  <p *ngIf=\"logo === 'area'\" class=\"body-small\">Area of Interest</p>\n  <p\n    [ngClass]=\"{\n      'text-primary': status === 'In Progress',\n      'text-gray-2': status === 'Pending',\n      'text-success': status === 'Completed',\n      'font-body text-body-3 font-normal': true\n    }\"\n  >\n    {{ status }}\n  </p>\n</div>\n"
        },
        {
            "name": "TitleComponent",
            "id": "component-TitleComponent-f821fe895e6a6a7d3e5dcb36ff9d8aa69daceb9de7468136828f38f6d2e71e36ff71067c4e86513e3d925fac7f74e3b2a7468d0b45e2054535ab5747d648ed1a",
            "file": "frontend/ui/components/atoms/title/title.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [
                "ViewEncapsulation.Emulated"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "c-title",
            "styleUrls": [
                "./title.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./title.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "color",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "",
                    "decorators": []
                },
                {
                    "name": "css",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  Input,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { TitleType } from './title.interface';\n\n@Component({\n  standalone: true,\n  selector: 'c-title',\n  imports: [CommonModule],\n  templateUrl: './title.component.html',\n  styleUrls: ['./title.component.scss'],\n  encapsulation: ViewEncapsulation.Emulated,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TitleComponent implements TitleType {\n  @Input() css!: TitleType['css'];\n\n  @Input() color!: TitleType['color'];\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./title.component.scss"
                }
            ],
            "stylesData": "",
            "implements": [
                "TitleType"
            ],
            "templateData": "<p\n  [ngClass]=\"{\n    title: true,\n    'title-xs': css === 'title-xs',\n    'title-sm': css === 'title-sm',\n    'title-base': css === 'title-base',\n    'title-xl': css === 'title-xl',\n    'title-2xl': css === 'title-2xl',\n    't-white': color === 't-white',\n    't-black': color === 't-black'\n  }\"\n>\n  <ng-content></ng-content>\n</p>\n"
        }
    ],
    "modules": [],
    "miscellaneous": {
        "variables": [
            {
                "name": "AreaStepPending",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "frontend/ui/stories/molecules/step/step.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    logo: 'area',\n    status: 'Pending',\n  },\n}"
            },
            {
                "name": "AreaStepProgess",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "frontend/ui/stories/molecules/step/step.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    logo: 'area',\n    status: 'In Progress',\n  },\n}"
            },
            {
                "name": "BasicStepPending",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "frontend/ui/stories/molecules/step/step.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    logo: 'basic',\n    status: 'Pending',\n  },\n}"
            },
            {
                "name": "BasicStepProgess",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "frontend/ui/stories/molecules/step/step.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    logo: 'basic',\n    status: 'In Progress',\n  },\n}"
            },
            {
                "name": "CheckStep",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "frontend/ui/stories/molecules/step/step.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    logo: 'check',\n    status: 'Completed',\n  },\n}"
            },
            {
                "name": "config",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "frontend/ui/.storybook/main.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StorybookConfig",
                "defaultValue": "{\n  stories: ['../stories/**/*.stories.@(js|jsx|ts|tsx)'],\n  addons: [\n    '@storybook/addon-links',\n    '@storybook/addon-essentials',\n    {\n      name: '@storybook/addon-styling',\n      options: {\n        // Check out https://github.com/storybookjs/addon-styling/blob/main/docs/api.md\n        // For more details on this addon's options.\n        /* postCss: {\n          implementation: require.resolve('postcss'),\n        }, */\n      }, // * no options for Angular,\n    },\n  ],\n  framework: {\n    name: '@storybook/angular',\n    options: {},\n  },\n  docs: {\n    autodocs: true,\n    defaultName: 'Docs',\n  },\n  // staticDirs: ['../public'],\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "frontend/ui/stories/molecules/button/button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<StoryComponent>",
                "defaultValue": "{\n  title: 'Components/Molecules/Button',\n  component: ButtonComponent,\n  //👇 Import both components to allow component compositing with Storybook\n  decorators: [\n    moduleMetadata({\n      declarations: [ButtonComponent, TitleComponent],\n      imports: [CommonModule],\n    }),\n    //👇 Wrap our stories with a decorator (optional)\n    // componentWrapperDecorator(story => `<div style=\"margin: 3em\">${story}</div>`),\n  ],\n  argTypes: {\n    css: {\n      options: ['button-primary', 'button-secondary', 'button-tertiary'],\n      control: { type: 'select' },\n    },\n    disabled: {\n      options: [true, false],\n      control: { type: 'radio' },\n    },\n    type: {\n      options: ['button', 'reset', 'submit'],\n      control: { type: 'radio' },\n    },\n  },\n  render: (args: StoryComponent) => {\n    const { title, ...buttonProps } = args;\n    const { text, ...titleProps } = title;\n\n    return {\n      props: { buttonProps, titleProps },\n      template: `\n      <c-button [css]=\"buttonProps.css\" [disabled]=\"buttonProps.disabled\" [type]=\"buttonProps.type\">\n      <c-title [css]=\"titleProps.css\" [color]=\"titleProps.color\">${text}</c-title>\n    </c-button>\n      `,\n    };\n  },\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "frontend/ui/stories/molecules/input/input.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<StoryComponent>",
                "defaultValue": "{\n  title: 'Components/Molecules/Input',\n  component: InputComponent,\n  //👇 Import both components to allow component compositing with Storybook\n  decorators: [\n    moduleMetadata({\n      declarations: [InputComponent, LabelComponent, ErrorInputComponent],\n      imports: [CommonModule, FormsModule, ReactiveFormsModule],\n    }),\n    //👇 Wrap our stories with a decorator (optional)\n    // componentWrapperDecorator(story => `<div style=\"margin: 3em\">${story}</div>`),\n  ],\n  argTypes: {\n    css: {\n      options: ['input-primary', 'input-secondary', 'input-tertiary'],\n      control: { type: 'select' },\n    },\n    disabled: {\n      options: [true, false],\n      control: { type: 'radio' },\n    },\n    type: {\n      options: ['number', 'text', 'email', 'password'],\n      control: { type: 'radio' },\n    },\n  },\n  render: (args: StoryComponent) => {\n    const { label, ...inputProps } = args;\n    const { text, ...inputLabel } = label;\n\n    const sharedFormControl = new FormControl('', Validators.required);\n\n    return {\n      props: { inputProps, inputLabel, sharedFormControl },\n      template: `\n      <c-label [css]=\"inputLabel.css\">\n        ${text}\n        <c-input\n        [css]=\"inputProps.css\"\n        [type]=\"inputProps.type\"\n        [placeholder]=\"inputProps.placeholder\"\n        [formControl]=\"sharedFormControl\"\n        [disabled]=\"inputProps.disabled\"\n        [name]=\"inputProps.name\"></c-input>\n      </c-label>\n\n      `,\n    };\n  },\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "frontend/ui/stories/molecules/step/step.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<StoryComponent>",
                "defaultValue": "{\n  title: 'Components/Molecules/Step',\n  component: StepComponent,\n  //👇 Import both components to allow component compositing with Storybook\n  decorators: [\n    moduleMetadata({\n      declarations: [\n        StepComponent,\n        IconAreaComponent,\n        IconPassComponent,\n        IconBasicComponent,\n      ],\n      imports: [CommonModule],\n    }),\n    //👇 Wrap our stories with a decorator (optional)\n    // componentWrapperDecorator(story => `<div style=\"margin: 3em\">${story}</div>`),\n  ],\n  argTypes: {\n    status: {\n      options: ['In Progress', 'Completed', 'Pending'],\n      control: { type: 'radio' },\n    },\n    logo: {\n      options: ['basic', 'pass', 'area', 'check'],\n      control: { type: 'radio' },\n    },\n  },\n  parameters: {\n    //👇 Runs a function before the story is rendered\n    before: (args: any, { argTypes }: any) => {\n      if (args.logo === 'check') {\n        //👇 Resets the status to 'Completed' if it's 'In Progress' and the logo is 'check'\n        args.status = 'Completed';\n      }\n      return args;\n    },\n  },\n  render: (args: StoryComponent) => {\n    const { logo, status } = args;\n\n    return {\n      props: { logo, status },\n      template: `\n        <c-step\n        [status]=\"status\"\n        [logo]=\"logo\"\n        />\n      `,\n    };\n  },\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "frontend/ui/stories/atoms/label/label.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<StoryType>",
                "defaultValue": "{\n  title: 'Components/Atoms/Label',\n  component: LabelComponent,\n  render: (args) => {\n    const { text, ...props } = args;\n    return {\n      props,\n      template: `\n        <c-label [css]=\"css\">\n          ${text}\n        </c-label>\n      `,\n    };\n  },\n  argTypes: {\n    css: {\n      type: 'string',\n    },\n    text: {\n      type: 'string',\n    },\n    for: {\n      type: 'string',\n    },\n  },\n  args: {\n    css: 'label-primary' || 'label-secondary' || 'label-tertiary',\n    text: '',\n    for: '',\n  },\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "frontend/ui/stories/atoms/title/title.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<StoryType>",
                "defaultValue": "{\n  title: 'Components/Atoms/Title',\n  component: TitleComponent,\n  render: (args) => {\n    const { text, ...props } = args;\n    return {\n      props,\n      template: `\n        <c-title [css]=\"css\" [color]=\"color\">\n          ${text}\n        </c-title>\n      `,\n    };\n  },\n  argTypes: {\n    css: {\n      control: {\n        type: 'select',\n        options: [\n          'title-xs',\n          'title-sm',\n          'title-base',\n          'title-xl',\n          'title-2xl',\n        ],\n      },\n    },\n    color: {\n      control: { type: 'radio', options: ['t-white', 't-black'] },\n    },\n    text: {\n      control: { type: 'text' },\n    },\n  },\n  args: {\n    css: 'title-xs',\n    color: 't-black',\n    text: 'Title Text',\n  },\n}"
            },
            {
                "name": "PasswordStepPending",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "frontend/ui/stories/molecules/step/step.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    logo: 'pass',\n    status: 'Pending',\n  },\n}"
            },
            {
                "name": "PasswordStepProgess",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "frontend/ui/stories/molecules/step/step.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    logo: 'pass',\n    status: 'In Progress',\n  },\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "frontend/ui/stories/atoms/label/label.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    css: 'label-primary',\n    text: 'Label Text',\n  },\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "frontend/ui/stories/atoms/title/title.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    color: 't-black',\n    css: 'title-2xl',\n    text: 'Title Text',\n  },\n}"
            },
            {
                "name": "PrimaryButton",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "frontend/ui/stories/molecules/button/button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    css: 'button-primary',\n    title: {\n      css: 'title-base',\n      color: 't-white',\n      text: 'Text button',\n    },\n  },\n}"
            },
            {
                "name": "PrimaryInput",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "frontend/ui/stories/molecules/input/input.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    css: 'input-primary',\n    type: 'text',\n    placeholder: 'Entry text',\n    disabled: false,\n    name: 'example',\n    label: {\n      css: 'label-primary',\n      text: 'Label text',\n    },\n  },\n}"
            }
        ],
        "functions": [],
        "typealiases": [
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<>",
                "file": "frontend/ui/stories/molecules/button/button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<StoryComponent>",
                "file": "frontend/ui/stories/molecules/input/input.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<StoryComponent>",
                "file": "frontend/ui/stories/molecules/step/step.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<StoryType>",
                "file": "frontend/ui/stories/atoms/label/label.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<StoryType>",
                "file": "frontend/ui/stories/atoms/title/title.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "StoryComponent",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "",
                "file": "frontend/ui/stories/molecules/button/button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 190
            },
            {
                "name": "StoryComponent",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "",
                "file": "frontend/ui/stories/molecules/input/input.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 190
            },
            {
                "name": "StoryComponent",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StepType",
                "file": "frontend/ui/stories/molecules/step/step.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "StoryDetails",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "frontend/ui/stories/molecules/input/input.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 184
            },
            {
                "name": "StoryTitle",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "",
                "file": "frontend/ui/stories/molecules/button/button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 190
            },
            {
                "name": "StoryType",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "",
                "file": "frontend/ui/stories/atoms/label/label.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 190
            },
            {
                "name": "StoryType",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "",
                "file": "frontend/ui/stories/atoms/title/title.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 190
            }
        ],
        "enumerations": [],
        "groupedVariables": {
            "frontend/ui/stories/molecules/step/step.component.stories.ts": [
                {
                    "name": "AreaStepPending",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "frontend/ui/stories/molecules/step/step.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    logo: 'area',\n    status: 'Pending',\n  },\n}"
                },
                {
                    "name": "AreaStepProgess",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "frontend/ui/stories/molecules/step/step.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    logo: 'area',\n    status: 'In Progress',\n  },\n}"
                },
                {
                    "name": "BasicStepPending",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "frontend/ui/stories/molecules/step/step.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    logo: 'basic',\n    status: 'Pending',\n  },\n}"
                },
                {
                    "name": "BasicStepProgess",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "frontend/ui/stories/molecules/step/step.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    logo: 'basic',\n    status: 'In Progress',\n  },\n}"
                },
                {
                    "name": "CheckStep",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "frontend/ui/stories/molecules/step/step.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    logo: 'check',\n    status: 'Completed',\n  },\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "frontend/ui/stories/molecules/step/step.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<StoryComponent>",
                    "defaultValue": "{\n  title: 'Components/Molecules/Step',\n  component: StepComponent,\n  //👇 Import both components to allow component compositing with Storybook\n  decorators: [\n    moduleMetadata({\n      declarations: [\n        StepComponent,\n        IconAreaComponent,\n        IconPassComponent,\n        IconBasicComponent,\n      ],\n      imports: [CommonModule],\n    }),\n    //👇 Wrap our stories with a decorator (optional)\n    // componentWrapperDecorator(story => `<div style=\"margin: 3em\">${story}</div>`),\n  ],\n  argTypes: {\n    status: {\n      options: ['In Progress', 'Completed', 'Pending'],\n      control: { type: 'radio' },\n    },\n    logo: {\n      options: ['basic', 'pass', 'area', 'check'],\n      control: { type: 'radio' },\n    },\n  },\n  parameters: {\n    //👇 Runs a function before the story is rendered\n    before: (args: any, { argTypes }: any) => {\n      if (args.logo === 'check') {\n        //👇 Resets the status to 'Completed' if it's 'In Progress' and the logo is 'check'\n        args.status = 'Completed';\n      }\n      return args;\n    },\n  },\n  render: (args: StoryComponent) => {\n    const { logo, status } = args;\n\n    return {\n      props: { logo, status },\n      template: `\n        <c-step\n        [status]=\"status\"\n        [logo]=\"logo\"\n        />\n      `,\n    };\n  },\n}"
                },
                {
                    "name": "PasswordStepPending",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "frontend/ui/stories/molecules/step/step.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    logo: 'pass',\n    status: 'Pending',\n  },\n}"
                },
                {
                    "name": "PasswordStepProgess",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "frontend/ui/stories/molecules/step/step.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    logo: 'pass',\n    status: 'In Progress',\n  },\n}"
                }
            ],
            "frontend/ui/.storybook/main.ts": [
                {
                    "name": "config",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "frontend/ui/.storybook/main.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StorybookConfig",
                    "defaultValue": "{\n  stories: ['../stories/**/*.stories.@(js|jsx|ts|tsx)'],\n  addons: [\n    '@storybook/addon-links',\n    '@storybook/addon-essentials',\n    {\n      name: '@storybook/addon-styling',\n      options: {\n        // Check out https://github.com/storybookjs/addon-styling/blob/main/docs/api.md\n        // For more details on this addon's options.\n        /* postCss: {\n          implementation: require.resolve('postcss'),\n        }, */\n      }, // * no options for Angular,\n    },\n  ],\n  framework: {\n    name: '@storybook/angular',\n    options: {},\n  },\n  docs: {\n    autodocs: true,\n    defaultName: 'Docs',\n  },\n  // staticDirs: ['../public'],\n}"
                }
            ],
            "frontend/ui/stories/molecules/button/button.component.stories.ts": [
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "frontend/ui/stories/molecules/button/button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<StoryComponent>",
                    "defaultValue": "{\n  title: 'Components/Molecules/Button',\n  component: ButtonComponent,\n  //👇 Import both components to allow component compositing with Storybook\n  decorators: [\n    moduleMetadata({\n      declarations: [ButtonComponent, TitleComponent],\n      imports: [CommonModule],\n    }),\n    //👇 Wrap our stories with a decorator (optional)\n    // componentWrapperDecorator(story => `<div style=\"margin: 3em\">${story}</div>`),\n  ],\n  argTypes: {\n    css: {\n      options: ['button-primary', 'button-secondary', 'button-tertiary'],\n      control: { type: 'select' },\n    },\n    disabled: {\n      options: [true, false],\n      control: { type: 'radio' },\n    },\n    type: {\n      options: ['button', 'reset', 'submit'],\n      control: { type: 'radio' },\n    },\n  },\n  render: (args: StoryComponent) => {\n    const { title, ...buttonProps } = args;\n    const { text, ...titleProps } = title;\n\n    return {\n      props: { buttonProps, titleProps },\n      template: `\n      <c-button [css]=\"buttonProps.css\" [disabled]=\"buttonProps.disabled\" [type]=\"buttonProps.type\">\n      <c-title [css]=\"titleProps.css\" [color]=\"titleProps.color\">${text}</c-title>\n    </c-button>\n      `,\n    };\n  },\n}"
                },
                {
                    "name": "PrimaryButton",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "frontend/ui/stories/molecules/button/button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    css: 'button-primary',\n    title: {\n      css: 'title-base',\n      color: 't-white',\n      text: 'Text button',\n    },\n  },\n}"
                }
            ],
            "frontend/ui/stories/molecules/input/input.component.stories.ts": [
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "frontend/ui/stories/molecules/input/input.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<StoryComponent>",
                    "defaultValue": "{\n  title: 'Components/Molecules/Input',\n  component: InputComponent,\n  //👇 Import both components to allow component compositing with Storybook\n  decorators: [\n    moduleMetadata({\n      declarations: [InputComponent, LabelComponent, ErrorInputComponent],\n      imports: [CommonModule, FormsModule, ReactiveFormsModule],\n    }),\n    //👇 Wrap our stories with a decorator (optional)\n    // componentWrapperDecorator(story => `<div style=\"margin: 3em\">${story}</div>`),\n  ],\n  argTypes: {\n    css: {\n      options: ['input-primary', 'input-secondary', 'input-tertiary'],\n      control: { type: 'select' },\n    },\n    disabled: {\n      options: [true, false],\n      control: { type: 'radio' },\n    },\n    type: {\n      options: ['number', 'text', 'email', 'password'],\n      control: { type: 'radio' },\n    },\n  },\n  render: (args: StoryComponent) => {\n    const { label, ...inputProps } = args;\n    const { text, ...inputLabel } = label;\n\n    const sharedFormControl = new FormControl('', Validators.required);\n\n    return {\n      props: { inputProps, inputLabel, sharedFormControl },\n      template: `\n      <c-label [css]=\"inputLabel.css\">\n        ${text}\n        <c-input\n        [css]=\"inputProps.css\"\n        [type]=\"inputProps.type\"\n        [placeholder]=\"inputProps.placeholder\"\n        [formControl]=\"sharedFormControl\"\n        [disabled]=\"inputProps.disabled\"\n        [name]=\"inputProps.name\"></c-input>\n      </c-label>\n\n      `,\n    };\n  },\n}"
                },
                {
                    "name": "PrimaryInput",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "frontend/ui/stories/molecules/input/input.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    css: 'input-primary',\n    type: 'text',\n    placeholder: 'Entry text',\n    disabled: false,\n    name: 'example',\n    label: {\n      css: 'label-primary',\n      text: 'Label text',\n    },\n  },\n}"
                }
            ],
            "frontend/ui/stories/atoms/label/label.component.stories.ts": [
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "frontend/ui/stories/atoms/label/label.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<StoryType>",
                    "defaultValue": "{\n  title: 'Components/Atoms/Label',\n  component: LabelComponent,\n  render: (args) => {\n    const { text, ...props } = args;\n    return {\n      props,\n      template: `\n        <c-label [css]=\"css\">\n          ${text}\n        </c-label>\n      `,\n    };\n  },\n  argTypes: {\n    css: {\n      type: 'string',\n    },\n    text: {\n      type: 'string',\n    },\n    for: {\n      type: 'string',\n    },\n  },\n  args: {\n    css: 'label-primary' || 'label-secondary' || 'label-tertiary',\n    text: '',\n    for: '',\n  },\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "frontend/ui/stories/atoms/label/label.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    css: 'label-primary',\n    text: 'Label Text',\n  },\n}"
                }
            ],
            "frontend/ui/stories/atoms/title/title.component.stories.ts": [
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "frontend/ui/stories/atoms/title/title.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<StoryType>",
                    "defaultValue": "{\n  title: 'Components/Atoms/Title',\n  component: TitleComponent,\n  render: (args) => {\n    const { text, ...props } = args;\n    return {\n      props,\n      template: `\n        <c-title [css]=\"css\" [color]=\"color\">\n          ${text}\n        </c-title>\n      `,\n    };\n  },\n  argTypes: {\n    css: {\n      control: {\n        type: 'select',\n        options: [\n          'title-xs',\n          'title-sm',\n          'title-base',\n          'title-xl',\n          'title-2xl',\n        ],\n      },\n    },\n    color: {\n      control: { type: 'radio', options: ['t-white', 't-black'] },\n    },\n    text: {\n      control: { type: 'text' },\n    },\n  },\n  args: {\n    css: 'title-xs',\n    color: 't-black',\n    text: 'Title Text',\n  },\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "frontend/ui/stories/atoms/title/title.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    color: 't-black',\n    css: 'title-2xl',\n    text: 'Title Text',\n  },\n}"
                }
            ]
        },
        "groupedFunctions": {},
        "groupedEnumerations": {},
        "groupedTypeAliases": {
            "frontend/ui/stories/molecules/button/button.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<>",
                    "file": "frontend/ui/stories/molecules/button/button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                },
                {
                    "name": "StoryComponent",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "",
                    "file": "frontend/ui/stories/molecules/button/button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 190
                },
                {
                    "name": "StoryTitle",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "",
                    "file": "frontend/ui/stories/molecules/button/button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 190
                }
            ],
            "frontend/ui/stories/molecules/input/input.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<StoryComponent>",
                    "file": "frontend/ui/stories/molecules/input/input.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                },
                {
                    "name": "StoryComponent",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "",
                    "file": "frontend/ui/stories/molecules/input/input.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 190
                },
                {
                    "name": "StoryDetails",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "frontend/ui/stories/molecules/input/input.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 184
                }
            ],
            "frontend/ui/stories/molecules/step/step.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<StoryComponent>",
                    "file": "frontend/ui/stories/molecules/step/step.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                },
                {
                    "name": "StoryComponent",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StepType",
                    "file": "frontend/ui/stories/molecules/step/step.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ],
            "frontend/ui/stories/atoms/label/label.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<StoryType>",
                    "file": "frontend/ui/stories/atoms/label/label.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                },
                {
                    "name": "StoryType",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "",
                    "file": "frontend/ui/stories/atoms/label/label.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 190
                }
            ],
            "frontend/ui/stories/atoms/title/title.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<StoryType>",
                    "file": "frontend/ui/stories/atoms/title/title.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                },
                {
                    "name": "StoryType",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "",
                    "file": "frontend/ui/stories/atoms/title/title.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 190
                }
            ]
        }
    },
    "routes": [],
    "coverage": {
        "count": 0,
        "status": "low",
        "files": [
            {
                "filePath": "frontend/ui/.storybook/main.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "config",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "frontend/ui/components/atoms/error-input/error-input.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ErrorInputComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "frontend/ui/components/atoms/icons/icon-area/icon-area.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "IconAreaComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "frontend/ui/components/atoms/icons/icon-basic/icon-basic.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "IconBasicComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "frontend/ui/components/atoms/icons/icon-pass/icon-pass.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "IconPassComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "frontend/ui/components/atoms/label/label.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "LabelComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "frontend/ui/components/atoms/title/title.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TitleComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "frontend/ui/components/molecules/button/button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ButtonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "frontend/ui/components/molecules/input/input.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "InputComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "frontend/ui/components/molecules/step/step.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "StepComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "frontend/ui/stories/atoms/label/label.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "frontend/ui/stories/atoms/label/label.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "frontend/ui/stories/atoms/title/title.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "frontend/ui/stories/atoms/title/title.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "frontend/ui/stories/molecules/button/button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "frontend/ui/stories/molecules/button/button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "PrimaryButton",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "frontend/ui/stories/molecules/input/input.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "frontend/ui/stories/molecules/input/input.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "PrimaryInput",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "frontend/ui/stories/molecules/step/step.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "AreaStepPending",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "frontend/ui/stories/molecules/step/step.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "AreaStepProgess",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "frontend/ui/stories/molecules/step/step.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "BasicStepPending",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "frontend/ui/stories/molecules/step/step.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "BasicStepProgess",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "frontend/ui/stories/molecules/step/step.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "CheckStep",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "frontend/ui/stories/molecules/step/step.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "frontend/ui/stories/molecules/step/step.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "PasswordStepPending",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "frontend/ui/stories/molecules/step/step.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "PasswordStepProgess",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            }
        ]
    }
}